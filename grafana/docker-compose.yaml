version: "3"

networks:
  loki:


services:
  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo-config.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268" # jaeger ingest
      - "3200" # tempo
      - "4317" # otlp grpc
      - "4318" # otlp http
      - "9411" # zipkin
    networks:
      - loki
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki

  grafana:
    image: grafana/grafana:latest
    environment:
      - "GF_AUTH_DISABLE_LOGIN_FORM=true"
      - "GF_AUTH_ANONYMOUS_ENABLED=true"
      - "GF_AUTH_ANONYMOUS_ORG_ROLE=Admin"
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    ports:
      - "3000:3000"
    depends_on:
      - loki
      - tempo
    networks:
      - loki

  promtail:
    image: grafana/promtail:2.8.0
    volumes:
      - ./promtail-local-config.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - loki

  load-balancer:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - "mimir-1"
      - "mimir-2"
      - "mimir-3"
    ports:
      - 9009:9009
    networks:
      - loki

  mimir-1:
    image: grafana/mimir:latest
    command: [ "-config.file=/etc/mimir-config.yaml" ]
    hostname: mimir-1
    depends_on:
      - minio
    volumes:
      - ./mimir-config.yaml:/etc/mimir-config.yaml
      - ./alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-1-data:/data
    networks:
      - loki

  mimir-2:
    image: grafana/mimir:latest
    command: [ "-config.file=/etc/mimir-config.yaml" ]
    hostname: mimir-2
    depends_on:
      - minio
    volumes:
      - ./mimir-config.yaml:/etc/mimir-config.yaml
      - ./alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-2-data:/data
    networks:
      - loki

  mimir-3:
    image: grafana/mimir:latest
    command: [ "-config.file=/etc/mimir-config.yaml" ]
    hostname: mimir-3
    depends_on:
      - minio
    volumes:
      - ./mimir-config.yaml:/etc/mimir-config.yaml
      - ./alertmanager-fallback-config.yaml:/etc/alertmanager-fallback-config.yaml
      - mimir-3-data:/data
    networks:
      - loki

  minio:
    image: minio/minio
    entrypoint: [ "" ]
    command:
      [
        "sh",
        "-c",
        "mkdir -p /data/mimir && minio server --quiet /data"
      ]
    environment:
      - MINIO_ROOT_USER=mimir
      - MINIO_ROOT_PASSWORD=supersecret
    volumes:
      - minio-data:/data
    networks:
      - loki

  flog:
    image: mingrammer/flog
    command: -f json -d 1s -l
    networks:
      - loki

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus-config.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus-config.yaml:/etc/prometheus-config.yaml
    ports:
      - "9090:9090"
    depends_on:
      - "mimir-1"
      - "mimir-2"
      - "mimir-3"
    networks:
      - loki

  otelcol:
    image: otel/opentelemetry-collector-contrib:0.76.1
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yaml" ]
    volumes:
      - ./otelcol-config.yaml:/etc/otelcol-config.yaml
    ports:
      - "3500:3500" # loki receiver HTTP
      - "4317:4317" # OTLP gRPC receiver
      - "4318:4318" # OTLP http receiver
    networks:
      - loki

volumes:
  mimir-1-data:
  mimir-2-data:
  mimir-3-data:
  minio-data:
